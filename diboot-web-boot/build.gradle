group 'com.diboot'
version '1.0'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

//    打WAR包将此注释打开
//apply plugin: 'war'
sourceCompatibility = 1.8

[compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"
sourceSets {
    main {
        resources {
            srcDirs "src/main/java"
            include '**/*.xml'
            include '**/*.dtd'
            include '**/*.class'
        }
        resources {
            srcDirs "src/main/resources"
            include '**'
        }
    }
}

repositories {
    maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    maven{ url 'http://maven.diboot.com/repository/diboot/'}
    maven{ url 'http://maven.diboot.com/repository/devtools/'}
}

configurations { providedCompile;
    //移除spring boot 默认logger（logback）依赖
    all*.exclude module: 'spring-boot-starter-logging'
}
buildscript {
    ext.spring_boot_version = '2.1.1.RELEASE'
    repositories {
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    }
    dependencies {
        //引入打包插件
        classpath ("org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version")
    }
}

def spring_boot_version = "2.1.1.RELEASE"
def profile = System.getProperty("spring.profiles.active") ?: "dev"
def isDevEnv = profile == null || profile == "dev" // 是否为开发环境

dependencies {
//打WAR包将此注释打开
//  providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"

    if(isDevEnv){// 开发环境 启用Devtools
        compile("com.diboot:diboot-devtools-web:1.6.+")
    }
    compile fileTree(dir:'plugins', include:['*.jar'])

    // 依赖common项目
    compile project(":diboot-common")

    // boot组件
    compile("org.springframework.boot:spring-boot-starter-web:$spring_boot_version")
    compile("org.springframework.boot:spring-boot-devtools:$spring_boot_version")
    // Mybatis
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2")
    compile('mysql:mysql-connector-java:8.0.13')
    // Freemarker
    compile("org.springframework.boot:spring-boot-starter-freemarker:$spring_boot_version")
    // Log4j2
    compile("org.springframework.boot:spring-boot-starter-log4j2:$spring_boot_version")

    // Apache Shiro
    compile("org.apache.shiro:shiro-spring-boot-web-starter:1.4.0")
    // JWT认证
    compile("com.auth0:java-jwt:3.4.1",
            "io.jsonwebtoken:jjwt:0.9.1")

    // JSON
    compile ('com.alibaba:fastjson:1.2.54')
    // Apache Commons
    compile("commons-fileupload:commons-fileupload:1.3.3",
            "org.apache.commons:commons-lang3:3.8.1",
            "commons-io:commons-io:2.6"
    )

    // 微信开发组件，需要开发微信时引入
    //compile("com.github.binarywang:weixin-java-mp:3.2.0")
    //compile("com.github.binarywang:weixin-java-cp:3.2.0")
    //compile("com.github.binarywang:weixin-java-open:3.2.0")

    testCompile("org.springframework.boot:spring-boot-starter-test",
            "org.springframework:spring-test",
            "junit:junit")
}

// 需要打WAR包将此注释打开
/*
war {
    //打包文件的名称
    baseName = 'rest'
    //打包文件的版本
    version = '1.0.0'
}*/